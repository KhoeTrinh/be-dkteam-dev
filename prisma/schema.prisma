// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(uuid())
  userImage    String?    @default("assets/svg/user-svgrepo-com.svg")
  username     String    
  email        String     @unique
  password     String
  isDev        Boolean?   @default(false)
  isAdmin      Boolean?   @default(false)
  authorProd   UsersOnProducts[]
  comments     Comment[]
  aboutme      Aboutme?
}

model Product {
  id           String     @id @default(uuid())
  link         String 
  productImage String?    @default("assets/svg/gear-10-svgrepo-com.svg")
  title        String     @unique
  description  String     @db.VarChar(200)
  publishDate  DateTime   @default(now())
  author       UsersOnProducts[]
  comments     Comment[]
}

model UsersOnProducts {
  authorProd   User       @relation(fields: [authorProdId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  authorProdId String
  author       Product    @relation(fields: [authorId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  authorId     String

  @@id([authorProdId, authorId])
}

model Comment {
  id           String     @id @default(uuid())
  description  String     @db.VarChar(200)
  publishDate  DateTime   @default(now())
  author       User       @relation(fields: [authorId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  authorId     String     
  product      Product    @relation(fields: [productId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  productId    String     
}

model Aboutme {
  id           String     @id @default(uuid())
  title        String     
  description  String     @db.VarChar(200)
  image        String?    @default("assets/svg/user-svgrepo-com.svg")
  author       User       @relation(fields: [authorId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  authorId     String     @unique
}